
level1:     file format elf32-i386


Disassembly of section .init:

080482f4 <_init>:
 80482f4:	53                   	push   ebx
 80482f5:	83 ec 08             	sub    esp,0x8
 80482f8:	e8 00 00 00 00       	call   80482fd <_init+0x9>
 80482fd:	5b                   	pop    ebx
 80482fe:	81 c3 f7 1c 00 00    	add    ebx,0x1cf7
 8048304:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 804830a:	85 c0                	test   eax,eax
 804830c:	74 05                	je     8048313 <_init+0x1f>
 804830e:	e8 3d 00 00 00       	call   8048350 <__gmon_start__@plt>
 8048313:	e8 08 01 00 00       	call   8048420 <frame_dummy>
 8048318:	e8 13 02 00 00       	call   8048530 <__do_global_ctors_aux>
 804831d:	83 c4 08             	add    esp,0x8
 8048320:	5b                   	pop    ebx
 8048321:	c3                   	ret    

Disassembly of section .plt:

08048330 <printf@plt-0x10>:
 8048330:	ff 35 f8 9f 04 08    	push   DWORD PTR ds:0x8049ff8
 8048336:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 804833c:	00 00                	add    BYTE PTR [eax],al
	...

08048340 <printf@plt>:
 8048340:	ff 25 00 a0 04 08    	jmp    DWORD PTR ds:0x804a000
 8048346:	68 00 00 00 00       	push   0x0
 804834b:	e9 e0 ff ff ff       	jmp    8048330 <_init+0x3c>

08048350 <__gmon_start__@plt>:
 8048350:	ff 25 04 a0 04 08    	jmp    DWORD PTR ds:0x804a004
 8048356:	68 08 00 00 00       	push   0x8
 804835b:	e9 d0 ff ff ff       	jmp    8048330 <_init+0x3c>

08048360 <__libc_start_main@plt>:
 8048360:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 8048366:	68 10 00 00 00       	push   0x10
 804836b:	e9 c0 ff ff ff       	jmp    8048330 <_init+0x3c>

08048370 <execv@plt>:
 8048370:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 8048376:	68 18 00 00 00       	push   0x18
 804837b:	e9 b0 ff ff ff       	jmp    8048330 <_init+0x3c>

08048380 <atoi@plt>:
 8048380:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048386:	68 20 00 00 00       	push   0x20
 804838b:	e9 a0 ff ff ff       	jmp    8048330 <_init+0x3c>

Disassembly of section .text:

08048390 <_start>:
 8048390:	31 ed                	xor    ebp,ebp
 8048392:	5e                   	pop    esi
 8048393:	89 e1                	mov    ecx,esp
 8048395:	83 e4 f0             	and    esp,0xfffffff0
 8048398:	50                   	push   eax
 8048399:	54                   	push   esp
 804839a:	52                   	push   edx
 804839b:	68 20 85 04 08       	push   0x8048520
 80483a0:	68 b0 84 04 08       	push   0x80484b0
 80483a5:	51                   	push   ecx
 80483a6:	56                   	push   esi
 80483a7:	68 6d 84 04 08       	push   0x804846d
 80483ac:	e8 af ff ff ff       	call   8048360 <__libc_start_main@plt>
 80483b1:	f4                   	hlt    
 80483b2:	90                   	nop
 80483b3:	90                   	nop
 80483b4:	90                   	nop
 80483b5:	90                   	nop
 80483b6:	90                   	nop
 80483b7:	90                   	nop
 80483b8:	90                   	nop
 80483b9:	90                   	nop
 80483ba:	90                   	nop
 80483bb:	90                   	nop
 80483bc:	90                   	nop
 80483bd:	90                   	nop
 80483be:	90                   	nop
 80483bf:	90                   	nop

080483c0 <__do_global_dtors_aux>:
 80483c0:	55                   	push   ebp
 80483c1:	89 e5                	mov    ebp,esp
 80483c3:	53                   	push   ebx
 80483c4:	83 ec 04             	sub    esp,0x4
 80483c7:	80 3d 1c a0 04 08 00 	cmp    BYTE PTR ds:0x804a01c,0x0
 80483ce:	75 3f                	jne    804840f <__do_global_dtors_aux+0x4f>
 80483d0:	a1 20 a0 04 08       	mov    eax,ds:0x804a020
 80483d5:	bb 20 9f 04 08       	mov    ebx,0x8049f20
 80483da:	81 eb 1c 9f 04 08    	sub    ebx,0x8049f1c
 80483e0:	c1 fb 02             	sar    ebx,0x2
 80483e3:	83 eb 01             	sub    ebx,0x1
 80483e6:	39 d8                	cmp    eax,ebx
 80483e8:	73 1e                	jae    8048408 <__do_global_dtors_aux+0x48>
 80483ea:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80483f0:	83 c0 01             	add    eax,0x1
 80483f3:	a3 20 a0 04 08       	mov    ds:0x804a020,eax
 80483f8:	ff 14 85 1c 9f 04 08 	call   DWORD PTR [eax*4+0x8049f1c]
 80483ff:	a1 20 a0 04 08       	mov    eax,ds:0x804a020
 8048404:	39 d8                	cmp    eax,ebx
 8048406:	72 e8                	jb     80483f0 <__do_global_dtors_aux+0x30>
 8048408:	c6 05 1c a0 04 08 01 	mov    BYTE PTR ds:0x804a01c,0x1
 804840f:	83 c4 04             	add    esp,0x4
 8048412:	5b                   	pop    ebx
 8048413:	5d                   	pop    ebp
 8048414:	c3                   	ret    
 8048415:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048419:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048420 <frame_dummy>:
 8048420:	55                   	push   ebp
 8048421:	89 e5                	mov    ebp,esp
 8048423:	83 ec 18             	sub    esp,0x18
 8048426:	a1 24 9f 04 08       	mov    eax,ds:0x8049f24
 804842b:	85 c0                	test   eax,eax
 804842d:	74 12                	je     8048441 <frame_dummy+0x21>
 804842f:	b8 00 00 00 00       	mov    eax,0x0
 8048434:	85 c0                	test   eax,eax
 8048436:	74 09                	je     8048441 <frame_dummy+0x21>
 8048438:	c7 04 24 24 9f 04 08 	mov    DWORD PTR [esp],0x8049f24
 804843f:	ff d0                	call   eax
 8048441:	c9                   	leave  
 8048442:	c3                   	ret    
 8048443:	90                   	nop

08048444 <you_win>:
 8048444:	55                   	push   ebp
 8048445:	89 e5                	mov    ebp,esp
 8048447:	83 ec 18             	sub    esp,0x18
 804844a:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
 8048451:	00 
 8048452:	c7 04 24 80 85 04 08 	mov    DWORD PTR [esp],0x8048580
 8048459:	e8 12 ff ff ff       	call   8048370 <execv@plt>
 804845e:	c9                   	leave  
 804845f:	c3                   	ret    

08048460 <exploit_me>:
 8048460:	55                   	push   ebp
 8048461:	89 e5                	mov    ebp,esp
 8048463:	8d 45 04             	lea    eax,[ebp+0x4]
 8048466:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
 8048469:	89 10                	mov    DWORD PTR [eax],edx
 804846b:	5d                   	pop    ebp
 804846c:	c3                   	ret    

0804846d <main>:
 804846d:	55                   	push   ebp
 804846e:	89 e5                	mov    ebp,esp
 8048470:	83 e4 f0             	and    esp,0xfffffff0
 8048473:	83 ec 10             	sub    esp,0x10
 8048476:	b8 88 85 04 08       	mov    eax,0x8048588
 804847b:	c7 44 24 04 44 84 04 	mov    DWORD PTR [esp+0x4],0x8048444
 8048482:	08 
 8048483:	89 04 24             	mov    DWORD PTR [esp],eax
 8048486:	e8 b5 fe ff ff       	call   8048340 <printf@plt>
 804848b:	83 7d 08 02          	cmp    DWORD PTR [ebp+0x8],0x2
 804848f:	75 1a                	jne    80484ab <main+0x3e>
 8048491:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048494:	83 c0 04             	add    eax,0x4
 8048497:	8b 00                	mov    eax,DWORD PTR [eax]
 8048499:	89 04 24             	mov    DWORD PTR [esp],eax
 804849c:	e8 df fe ff ff       	call   8048380 <atoi@plt>
 80484a1:	89 04 24             	mov    DWORD PTR [esp],eax
 80484a4:	e8 b7 ff ff ff       	call   8048460 <exploit_me>
 80484a9:	eb 01                	jmp    80484ac <main+0x3f>
 80484ab:	90                   	nop
 80484ac:	c9                   	leave  
 80484ad:	c3                   	ret    
 80484ae:	90                   	nop
 80484af:	90                   	nop

080484b0 <__libc_csu_init>:
 80484b0:	55                   	push   ebp
 80484b1:	57                   	push   edi
 80484b2:	56                   	push   esi
 80484b3:	53                   	push   ebx
 80484b4:	e8 69 00 00 00       	call   8048522 <__i686.get_pc_thunk.bx>
 80484b9:	81 c3 3b 1b 00 00    	add    ebx,0x1b3b
 80484bf:	83 ec 1c             	sub    esp,0x1c
 80484c2:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 80484c6:	8d bb 20 ff ff ff    	lea    edi,[ebx-0xe0]
 80484cc:	e8 23 fe ff ff       	call   80482f4 <_init>
 80484d1:	8d 83 20 ff ff ff    	lea    eax,[ebx-0xe0]
 80484d7:	29 c7                	sub    edi,eax
 80484d9:	c1 ff 02             	sar    edi,0x2
 80484dc:	85 ff                	test   edi,edi
 80484de:	74 29                	je     8048509 <__libc_csu_init+0x59>
 80484e0:	31 f6                	xor    esi,esi
 80484e2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80484e8:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 80484ec:	89 2c 24             	mov    DWORD PTR [esp],ebp
 80484ef:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 80484f3:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 80484f7:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80484fb:	ff 94 b3 20 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xe0]
 8048502:	83 c6 01             	add    esi,0x1
 8048505:	39 fe                	cmp    esi,edi
 8048507:	75 df                	jne    80484e8 <__libc_csu_init+0x38>
 8048509:	83 c4 1c             	add    esp,0x1c
 804850c:	5b                   	pop    ebx
 804850d:	5e                   	pop    esi
 804850e:	5f                   	pop    edi
 804850f:	5d                   	pop    ebp
 8048510:	c3                   	ret    
 8048511:	eb 0d                	jmp    8048520 <__libc_csu_fini>
 8048513:	90                   	nop
 8048514:	90                   	nop
 8048515:	90                   	nop
 8048516:	90                   	nop
 8048517:	90                   	nop
 8048518:	90                   	nop
 8048519:	90                   	nop
 804851a:	90                   	nop
 804851b:	90                   	nop
 804851c:	90                   	nop
 804851d:	90                   	nop
 804851e:	90                   	nop
 804851f:	90                   	nop

08048520 <__libc_csu_fini>:
 8048520:	f3 c3                	repz ret 

08048522 <__i686.get_pc_thunk.bx>:
 8048522:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048525:	c3                   	ret    
 8048526:	90                   	nop
 8048527:	90                   	nop
 8048528:	90                   	nop
 8048529:	90                   	nop
 804852a:	90                   	nop
 804852b:	90                   	nop
 804852c:	90                   	nop
 804852d:	90                   	nop
 804852e:	90                   	nop
 804852f:	90                   	nop

08048530 <__do_global_ctors_aux>:
 8048530:	55                   	push   ebp
 8048531:	89 e5                	mov    ebp,esp
 8048533:	53                   	push   ebx
 8048534:	83 ec 04             	sub    esp,0x4
 8048537:	a1 14 9f 04 08       	mov    eax,ds:0x8049f14
 804853c:	83 f8 ff             	cmp    eax,0xffffffff
 804853f:	74 13                	je     8048554 <__do_global_ctors_aux+0x24>
 8048541:	bb 14 9f 04 08       	mov    ebx,0x8049f14
 8048546:	66 90                	xchg   ax,ax
 8048548:	83 eb 04             	sub    ebx,0x4
 804854b:	ff d0                	call   eax
 804854d:	8b 03                	mov    eax,DWORD PTR [ebx]
 804854f:	83 f8 ff             	cmp    eax,0xffffffff
 8048552:	75 f4                	jne    8048548 <__do_global_ctors_aux+0x18>
 8048554:	83 c4 04             	add    esp,0x4
 8048557:	5b                   	pop    ebx
 8048558:	5d                   	pop    ebp
 8048559:	c3                   	ret    
 804855a:	90                   	nop
 804855b:	90                   	nop

Disassembly of section .fini:

0804855c <_fini>:
 804855c:	53                   	push   ebx
 804855d:	83 ec 08             	sub    esp,0x8
 8048560:	e8 00 00 00 00       	call   8048565 <_fini+0x9>
 8048565:	5b                   	pop    ebx
 8048566:	81 c3 8f 1a 00 00    	add    ebx,0x1a8f
 804856c:	e8 4f fe ff ff       	call   80483c0 <__do_global_dtors_aux>
 8048571:	83 c4 08             	add    esp,0x8
 8048574:	5b                   	pop    ebx
 8048575:	c3                   	ret    
